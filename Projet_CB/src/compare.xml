<instance format="XCSP3" type="COP">
  <variables>
    <array id="x" note="x est un vecteur. Il est de taille n. Chaque élément de x peut prendre une valeur dans le domaine [1,...,n]. x[i] est l'étiquette du sommet i. Exemple d'étiquetage possible: x = [2,4,3,1,5]" size="[30]"> 1..30 </array>
    <array id="aux_gb" note="aux_gb[i] is the ith auxiliary variable having been automatically introduced" size="[103]"> 0..29 </array>
  </variables>
  <constraints>
    <allDifferent> x[] </allDifferent>
    <intension> eq(x[0],1) </intension>
    <intension> lt(x[2],x[29]) </intension>
    <group>
      <minimum>
        <list> %0 %1 </list>
        <condition> (eq,%2) </condition>
      </minimum>
      <args> dist(x[0],x[5]) sub(30,dist(x[0],x[5])) aux_gb[0] </args>
      <args> dist(x[0],x[11]) sub(30,dist(x[0],x[11])) aux_gb[1] </args>
      <args> dist(x[0],x[14]) sub(30,dist(x[0],x[14])) aux_gb[2] </args>
      <args> dist(x[0],x[22]) sub(30,dist(x[0],x[22])) aux_gb[3] </args>
      <args> dist(x[1],x[20]) sub(30,dist(x[1],x[20])) aux_gb[4] </args>
      <args> dist(x[1],x[28]) sub(30,dist(x[1],x[28])) aux_gb[5] </args>
      <args> dist(x[2],x[17]) sub(30,dist(x[2],x[17])) aux_gb[6] </args>
      <args> dist(x[2],x[18]) sub(30,dist(x[2],x[18])) aux_gb[7] </args>
      <args> dist(x[2],x[29]) sub(30,dist(x[2],x[29])) aux_gb[8] </args>
      <args> dist(x[3],x[8]) sub(30,dist(x[3],x[8])) aux_gb[9] </args>
      <args> dist(x[3],x[16]) sub(30,dist(x[3],x[16])) aux_gb[10] </args>
      <args> dist(x[3],x[24]) sub(30,dist(x[3],x[24])) aux_gb[11] </args>
      <args> dist(x[3],x[27]) sub(30,dist(x[3],x[27])) aux_gb[12] </args>
      <args> dist(x[5],x[2]) sub(30,dist(x[5],x[2])) aux_gb[13] </args>
      <args> dist(x[5],x[8]) sub(30,dist(x[5],x[8])) aux_gb[14] </args>
      <args> dist(x[5],x[14]) sub(30,dist(x[5],x[14])) aux_gb[15] </args>
      <args> dist(x[5],x[17]) sub(30,dist(x[5],x[17])) aux_gb[16] </args>
      <args> dist(x[5],x[27]) sub(30,dist(x[5],x[27])) aux_gb[17] </args>
      <args> dist(x[6],x[0]) sub(30,dist(x[6],x[0])) aux_gb[18] </args>
      <args> dist(x[6],x[9]) sub(30,dist(x[6],x[9])) aux_gb[19] </args>
      <args> dist(x[6],x[10]) sub(30,dist(x[6],x[10])) aux_gb[20] </args>
      <args> dist(x[6],x[19]) sub(30,dist(x[6],x[19])) aux_gb[21] </args>
      <args> dist(x[6],x[25]) sub(30,dist(x[6],x[25])) aux_gb[22] </args>
      <args> dist(x[7],x[4]) sub(30,dist(x[7],x[4])) aux_gb[23] </args>
      <args> dist(x[7],x[12]) sub(30,dist(x[7],x[12])) aux_gb[24] </args>
      <args> dist(x[8],x[13]) sub(30,dist(x[8],x[13])) aux_gb[25] </args>
      <args> dist(x[8],x[18]) sub(30,dist(x[8],x[18])) aux_gb[26] </args>
      <args> dist(x[8],x[21]) sub(30,dist(x[8],x[21])) aux_gb[27] </args>
      <args> dist(x[8],x[27]) sub(30,dist(x[8],x[27])) aux_gb[28] </args>
      <args> dist(x[8],x[29]) sub(30,dist(x[8],x[29])) aux_gb[29] </args>
      <args> dist(x[9],x[0]) sub(30,dist(x[9],x[0])) aux_gb[30] </args>
      <args> dist(x[9],x[5]) sub(30,dist(x[9],x[5])) aux_gb[31] </args>
      <args> dist(x[9],x[11]) sub(30,dist(x[9],x[11])) aux_gb[32] </args>
      <args> dist(x[9],x[14]) sub(30,dist(x[9],x[14])) aux_gb[33] </args>
      <args> dist(x[9],x[22]) sub(30,dist(x[9],x[22])) aux_gb[34] </args>
      <args> dist(x[10],x[0]) sub(30,dist(x[10],x[0])) aux_gb[35] </args>
      <args> dist(x[10],x[9]) sub(30,dist(x[10],x[9])) aux_gb[36] </args>
      <args> dist(x[10],x[19]) sub(30,dist(x[10],x[19])) aux_gb[37] </args>
      <args> dist(x[10],x[25]) sub(30,dist(x[10],x[25])) aux_gb[38] </args>
      <args> dist(x[11],x[2]) sub(30,dist(x[11],x[2])) aux_gb[39] </args>
      <args> dist(x[11],x[17]) sub(30,dist(x[11],x[17])) aux_gb[40] </args>
      <args> dist(x[12],x[4]) sub(30,dist(x[12],x[4])) aux_gb[41] </args>
      <args> dist(x[13],x[7]) sub(30,dist(x[13],x[7])) aux_gb[42] </args>
      <args> dist(x[13],x[15]) sub(30,dist(x[13],x[15])) aux_gb[43] </args>
      <args> dist(x[13],x[20]) sub(30,dist(x[13],x[20])) aux_gb[44] </args>
      <args> dist(x[13],x[28]) sub(30,dist(x[13],x[28])) aux_gb[45] </args>
      <args> dist(x[14],x[2]) sub(30,dist(x[14],x[2])) aux_gb[46] </args>
      <args> dist(x[14],x[8]) sub(30,dist(x[14],x[8])) aux_gb[47] </args>
      <args> dist(x[14],x[17]) sub(30,dist(x[14],x[17])) aux_gb[48] </args>
      <args> dist(x[14],x[27]) sub(30,dist(x[14],x[27])) aux_gb[49] </args>
      <args> dist(x[15],x[4]) sub(30,dist(x[15],x[4])) aux_gb[50] </args>
      <args> dist(x[15],x[7]) sub(30,dist(x[15],x[7])) aux_gb[51] </args>
      <args> dist(x[15],x[12]) sub(30,dist(x[15],x[12])) aux_gb[52] </args>
      <args> dist(x[16],x[1]) sub(30,dist(x[16],x[1])) aux_gb[53] </args>
      <args> dist(x[16],x[13]) sub(30,dist(x[16],x[13])) aux_gb[54] </args>
      <args> dist(x[16],x[21]) sub(30,dist(x[16],x[21])) aux_gb[55] </args>
      <args> dist(x[16],x[23]) sub(30,dist(x[16],x[23])) aux_gb[56] </args>
      <args> dist(x[16],x[24]) sub(30,dist(x[16],x[24])) aux_gb[57] </args>
      <args> dist(x[17],x[18]) sub(30,dist(x[17],x[18])) aux_gb[58] </args>
      <args> dist(x[17],x[29]) sub(30,dist(x[17],x[29])) aux_gb[59] </args>
      <args> dist(x[18],x[7]) sub(30,dist(x[18],x[7])) aux_gb[60] </args>
      <args> dist(x[18],x[15]) sub(30,dist(x[18],x[15])) aux_gb[61] </args>
      <args> dist(x[19],x[3]) sub(30,dist(x[19],x[3])) aux_gb[62] </args>
      <args> dist(x[19],x[5]) sub(30,dist(x[19],x[5])) aux_gb[63] </args>
      <args> dist(x[19],x[14]) sub(30,dist(x[19],x[14])) aux_gb[64] </args>
      <args> dist(x[19],x[26]) sub(30,dist(x[19],x[26])) aux_gb[65] </args>
      <args> dist(x[20],x[4]) sub(30,dist(x[20],x[4])) aux_gb[66] </args>
      <args> dist(x[20],x[12]) sub(30,dist(x[20],x[12])) aux_gb[67] </args>
      <args> dist(x[21],x[7]) sub(30,dist(x[21],x[7])) aux_gb[68] </args>
      <args> dist(x[21],x[13]) sub(30,dist(x[21],x[13])) aux_gb[69] </args>
      <args> dist(x[21],x[15]) sub(30,dist(x[21],x[15])) aux_gb[70] </args>
      <args> dist(x[21],x[20]) sub(30,dist(x[21],x[20])) aux_gb[71] </args>
      <args> dist(x[21],x[28]) sub(30,dist(x[21],x[28])) aux_gb[72] </args>
      <args> dist(x[22],x[2]) sub(30,dist(x[22],x[2])) aux_gb[73] </args>
      <args> dist(x[22],x[11]) sub(30,dist(x[22],x[11])) aux_gb[74] </args>
      <args> dist(x[22],x[17]) sub(30,dist(x[22],x[17])) aux_gb[75] </args>
      <args> dist(x[23],x[1]) sub(30,dist(x[23],x[1])) aux_gb[76] </args>
      <args> dist(x[23],x[20]) sub(30,dist(x[23],x[20])) aux_gb[77] </args>
      <args> dist(x[23],x[28]) sub(30,dist(x[23],x[28])) aux_gb[78] </args>
      <args> dist(x[24],x[1]) sub(30,dist(x[24],x[1])) aux_gb[79] </args>
      <args> dist(x[24],x[13]) sub(30,dist(x[24],x[13])) aux_gb[80] </args>
      <args> dist(x[24],x[21]) sub(30,dist(x[24],x[21])) aux_gb[81] </args>
      <args> dist(x[24],x[23]) sub(30,dist(x[24],x[23])) aux_gb[82] </args>
      <args> dist(x[25],x[3]) sub(30,dist(x[25],x[3])) aux_gb[83] </args>
      <args> dist(x[25],x[5]) sub(30,dist(x[25],x[5])) aux_gb[84] </args>
      <args> dist(x[25],x[14]) sub(30,dist(x[25],x[14])) aux_gb[85] </args>
      <args> dist(x[25],x[19]) sub(30,dist(x[25],x[19])) aux_gb[86] </args>
      <args> dist(x[25],x[26]) sub(30,dist(x[25],x[26])) aux_gb[87] </args>
      <args> dist(x[26],x[3]) sub(30,dist(x[26],x[3])) aux_gb[88] </args>
      <args> dist(x[26],x[8]) sub(30,dist(x[26],x[8])) aux_gb[89] </args>
      <args> dist(x[26],x[16]) sub(30,dist(x[26],x[16])) aux_gb[90] </args>
      <args> dist(x[26],x[24]) sub(30,dist(x[26],x[24])) aux_gb[91] </args>
      <args> dist(x[26],x[27]) sub(30,dist(x[26],x[27])) aux_gb[92] </args>
      <args> dist(x[27],x[13]) sub(30,dist(x[27],x[13])) aux_gb[93] </args>
      <args> dist(x[27],x[18]) sub(30,dist(x[27],x[18])) aux_gb[94] </args>
      <args> dist(x[27],x[21]) sub(30,dist(x[27],x[21])) aux_gb[95] </args>
      <args> dist(x[27],x[29]) sub(30,dist(x[27],x[29])) aux_gb[96] </args>
      <args> dist(x[28],x[4]) sub(30,dist(x[28],x[4])) aux_gb[97] </args>
      <args> dist(x[28],x[12]) sub(30,dist(x[28],x[12])) aux_gb[98] </args>
      <args> dist(x[28],x[20]) sub(30,dist(x[28],x[20])) aux_gb[99] </args>
      <args> dist(x[29],x[7]) sub(30,dist(x[29],x[7])) aux_gb[100] </args>
      <args> dist(x[29],x[15]) sub(30,dist(x[29],x[15])) aux_gb[101] </args>
      <args> dist(x[29],x[18]) sub(30,dist(x[29],x[18])) aux_gb[102] </args>
    </group>
  </constraints>
  <objectives>
    <minimize type="maximum"> aux_gb[] </minimize>
  </objectives>
</instance>
