t_total_data = [[0.772, 0.97, 0.919, 0.859, 1.101, 1.015, 0.807, 1.721, 1.46, 1.07], [1.939, 1.655, 1.742, 1.607, 2.192, 2.158, 1.859, 3.044, 3.413, 1.759], [3.335, 3.267, 2.958, 3.354, 4.129, 4.106, 2.954, 6.976, 7.582, 2.977], [22.014, 23.518, 22.66, 26.037, 33.821, 28.65, 23.791, 111.187, 39.266, 23.596], [2.343, 2.284, 2.295, 2.356, 2.606, 2.599, 2.565, 2.874, 3.1, 2.417], [4.777, 4.65, 4.793, 5.989, 6.279, 6.814, 5.141, 8.767, 8.739, 4.933], [9.343, 10.262, 9.812, 12.364, 13.209, 17.094, 10.939, 15.854, 16.752, 8.964], [5.307, 4.594, 5.345, 5.433, 5.361, 5.358, 8.842, 10.93, 93.522, 5.642], [70.776, 64.454, 59.997, 200.041, 53.998, 200.161, 200.343, 202.845, 200.021, 48.384], [17.615, 17.627, 18.168, 23.65, 21.954, 27.903, 28.081, 141.95, 158.145, 17.863], [49.596, 49.331, 50.261, 58.735, 62.165, 200.089, 52.741, 214.113, 200.001, 58.556], [200.017, 200.033, 200.062, 11.798, 202.412, 10.761, 200.002, 200.056, 200.055, 200.306], [11.891, 11.408, 8.568, 11.177, 9.38, 11.005, 200.078, 223.604, 200.003, 18.129], [28.45, 29.238, 29.267, 54.171, 40.972, 169.303, 86.804, 200.044, 200.093, 28.969], [6.95, 7.271, 6.898, 7.257, 9.519, 10.543, 7.136, 21.256, 40.26, 6.984], [200.06, 161.137, 200.273, 12.041, 200.079, 11.091, 200.005, 200.138, 200.041, 200.02], [1.746, 6.049, 2.386, 1.79, 2.553, 2.443, 17.067, 200.179, 33.658, 4.738], [3.572, 3.664, 3.232, 3.476, 4.067, 4.66, 4.188, 27.538, 15.636, 3.269], [16.707, 201.392, 28.32, 51.641, 153.692, 50.767, 200.066, 200.0, 200.004, 65.758], [200.001, 78.791, 77.566, 81.671, 75.999, 131.43, 200.01, 200.012, 200.034, 200.056]] 


import matplotlib.pyplot as plt

t_solve_data = [[0.00989842414855957, 0.02459239959716797, 0.016907930374145508, 0.021286964416503906, 0.03300881385803223, 0.03676724433898926, 0.042958736419677734, 0.5652501583099365, 0.2221219539642334, 0.09177422523498535], [0.030630111694335938, 0.05493974685668945, 0.0187528133392334, 0.03603553771972656, 0.08136725425720215, 0.18799328804016113, 0.2362527847290039, 1.0244224071502686, 1.3932559490203857, 0.03569936752319336], [0.03480720520019531, 0.06899309158325195, 0.036745309829711914, 0.11050081253051758, 0.19771242141723633, 0.2143878936767578, 0.0471186637878418, 3.340672016143799, 3.7425026893615723, 0.05682063102722168], [0.37436413764953613, 1.3510193824768066, 0.3580324649810791, 4.1600329875946045, 5.838487863540649, 1.3386151790618896, 0.6249971389770508, 82.90726971626282, 10.346980333328247, 0.4269561767578125], [0.06357192993164062, 0.021340608596801758, 0.03275799751281738, 0.07755303382873535, 0.05023479461669922, 0.11808204650878906, 0.38275885581970215, 0.498734712600708, 0.6733675003051758, 0.17888402938842773], [0.07507681846618652, 0.07992792129516602, 0.1084132194519043, 0.35192084312438965, 0.2724263668060303, 1.598891258239746, 0.5910437107086182, 3.7257492542266846, 3.5702452659606934, 0.08340072631835938], [0.07856488227844238, 0.08692336082458496, 0.09871053695678711, 1.932788610458374, 0.31204938888549805, 4.699235677719116, 0.5841178894042969, 3.571837902069092, 5.3147666454315186, 0.0998375415802002], [0.3791062831878662, 0.09936881065368652, 0.11721539497375488, 0.8214941024780273, 0.15689539909362793, 0.43784236907958984, 4.052654266357422, 5.193589210510254, 88.70781898498535, 0.3647196292877197], [19.851258277893066, 18.296001195907593, 15.629331827163696, 151.06939363479614, 4.231905698776245, 154.25104022026062, 155.6862668991089, 156.27853894233704, 151.1277461051941, 7.7717766761779785], [0.13611412048339844, 0.17101502418518066, 0.18447613716125488, 3.614758253097534, 0.7655284404754639, 5.975648403167725, 9.58544659614563, 122.60174679756165, 138.4205195903778, 0.4516150951385498], [0.8069210052490234, 0.8860399723052979, 0.8980286121368408, 9.002521991729736, 7.957693099975586, 146.09438395500183, 3.7856788635253906, 160.47435879707336, 144.76417326927185, 10.319623231887817], [199.55533719062805, 199.59422159194946, 199.59272694587708, 11.280177116394043, 201.91884684562683, 10.231869220733643, 199.56712746620178, 199.56292843818665, 199.56331372261047, 199.87644910812378], [3.9777557849884033, 3.961245536804199, 1.2531673908233643, 3.419267416000366, 1.3409359455108643, 3.2135157585144043, 192.7013647556305, 215.37997102737427, 191.52450108528137, 10.952567338943481], [0.37064576148986816, 1.2527189254760742, 0.42406439781188965, 24.138763427734375, 6.456859350204468, 138.81700086593628, 57.792940855026245, 167.35856556892395, 168.36809134483337, 0.34592723846435547], [0.048410892486572266, 0.07248926162719727, 0.07028889656066895, 0.27739906311035156, 1.0484938621520996, 2.315486192703247, 0.22181391716003418, 13.520427942276001, 32.392565965652466, 0.05449700355529785], [199.4293727874756, 160.50618028640747, 199.57971930503845, 11.40902590751648, 199.34293961524963, 10.36389446258545, 199.3205761909485, 199.4458498954773, 199.29221940040588, 199.35901045799255], [0.1010279655456543, 4.497425079345703, 0.8032164573669434, 0.23740744590759277, 0.971203088760376, 0.8033528327941895, 15.44945764541626, 198.43290305137634, 31.567721366882324, 2.8709635734558105], [0.04839372634887695, 0.05847334861755371, 0.03180742263793945, 0.2268218994140625, 0.4121668338775635, 1.0977733135223389, 0.8371460437774658, 23.95752453804016, 12.114633798599243, 0.17479586601257324], [14.64289927482605, 198.57201766967773, 26.16715908050537, 49.526517391204834, 151.38292527198792, 48.44530010223389, 197.96664810180664, 197.54918122291565, 197.64438939094543, 63.667649269104004], [125.49372911453247, 2.387566566467285, 6.393351793289185, 10.757369041442871, 4.705334424972534, 48.45896339416504, 125.83480310440063, 123.49363851547241, 127.96630358695984, 125.08587837219238]] 

instances = [[2,5,4],[2,6,4],[2,7,4],[2,8,5],[3,5,4],[3,6,4],[3,7,4],[4,5,4],[4,6,5],[4,7,4],[4,9,4],[5,4,3],[5,5,4],[5,7,4],[5,8,3],[6,4,3],[6,5,3],[6,6,3],[7,5,3],[7,5,5]]

nb_instances = len(t_total_data)
nb_modeles = 10
	
plt.clf()
	
# On récupère les temps d'execution par instance pour chacun des modeles
t_total_par_instance_par_modele = []
for i in range(nb_modeles):
	t_solve_par_modele = []
	for j in range(nb_instances):
		t_solve_par_modele.append(t_total_data[j][i])
	t_total_par_instance_par_modele.append(t_solve_par_modele)

# On plot les temps pour chaque modele
x = range(nb_instances)

bss_modele = ["a1", "a2", "a12", "a12_o0", "a12_o1", "a12_o01", "o0", "o1", "o01", "sbs"]

for i in range(nb_modeles):
	y = t_total_par_instance_par_modele[i]
	bss = bss_modele[i]
	print("bss = ", bss)
	plt.plot(x, y, label=bss)
	
plt.legend()

# Labels
labels = []

print("labels = ", labels)
for i in range(nb_instances):
	nom_ins = str(instances[i])
	labels.append(nom_ins)

# Labels
# On labellise les instances en diagonale
plt.xticks(x, labels, rotation=45)
# Margin par rapport aux axes
plt.margins(0.2)
# Espacement
plt.subplots_adjust(bottom=0.15)
plt.xlabel('Instances Cardinal')
plt.ylabel('T exec (s)')
plt.title('Résolution du modèle SAT (Glucose3)')

# Sauvegarde de la figure dans res/graph/
plt.savefig("Plots_rapport_SAT_solve.svg")

plt.show()
